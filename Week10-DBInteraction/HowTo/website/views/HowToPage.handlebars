<!--headers
Chapter
    Page in Chapter

Navigation
Back button
Forward button
Link to ToC
-->
<h1>{{ch}}</h1>
<h2>{{pg}}</h2>

<!-- Page Content here -->
{{#if text}}
    <!-- assumes text is [{item: "some text"}] -->
    {{#each text}}
        <p>{{this.item}}</p>

            {{#if this.bullets}}
            <ul>
                {{#each this.bullets}}
                <li>{{this.dif}}</li>
                {{/each}}
            </ul>
            {{/if}}

            {{#if this.url}}
<a href="{{this.url}}">Click here to visit the link.</a>
            {{/if}}
    {{/each}}
{{/if}}

{{#if get}}
    <h3>{{get.name}}</h3>
    <p>{{get.des}}</p>
    {{#if get.hotttnesss}}<pre><code>
//Creates a string for requesting artist hotttnesss
//Parameters: artist name
//Returns: A string which will request artist hotttnesss
function getArtistHotttnesss(artist){
    var sync = true;
    var hotttString = null;
    
    //set up variables which hold request info
    var url = "http://developer.echonest.com/api/v4/";
    var getArtist = "artist/";
    var hotttnesss = "hotttnesss";
    var withkey = "?api_key=" + creds.echoNest;
    var ofArtist = "&name="+artist;
    
    hotttString = url + getArtist + hotttnesss + withkey + ofArtist;
    console.log("**hotttString is: " + hotttString);
    
    return hotttString;
}
    </code></pre>{{/if}}

    {{#if get.images}}<pre><code>
//Creates a string for requesting artist images
//Parameters: 
//  artist name
//  quantity
//  start index
//Returns: Array of objects representing images
function getArtistImages(artist, quantity, start){
    var imagesString = null;
    //set up variables which hold request info
    var url = "http://developer.echonest.com/api/v4/";
    var getArtist = "artist/";
    var getImages = "images/";
    var withkey = "?api_key=" + creds.echoNest;
    var results = quantity || 15;
    var start = start || 0;
    var ofArtist = "&name=" + artist;

    imagesString = url + getArtist + getImages + withkey + ofArtist;
    return imagesString;
    console.log("**imagesString is: " + imagesString);
    
}
    </code></pre>{{/if}}

    {{#if get.bios}}<pre><code>
//Creates a string for requesting artist biographies
//Parameters:
//  artist is the name of the artist
//  quantity indicates how many bios to request
//  start indicates which bio to start with
//Returns: a string requesting a quantity number of bios for artist from start onward
function getArtistBiographies(artist, quantity, start){
    var sync = true;
    var bioString = null;
    
    //set up variables which hold request info
    var url = "http://developer.echonest.com/api/v4/";
    var getArtist = "artist/";
    var getBios = "biographies/";
    var withkey = "?api_key=" + creds.echoNest;
    var results = quantity || 15;
    var start = start || 0;
    //console.log("Key string: " + withkey);
    var ofArtist = "&name="+artist;

    bioString = url + getArtist + getBios + withkey + ofArtist;
    return bioString;
    console.log("**bioString is: " + bioString);
}
    </code></pre>{{/if}}
{{/if}}

{{#if parse}}
    <h3>{{parse.name}}</h3>
    <p>{{parse.des}}</p>
    {{#if parse.hotttnesss}}<pre><code>
//parse an Artist Hottttnesss response
//Parameters: body is the response object from Echo Nest
//Returns:
//  On success: hottttnesss value
//  On failure: message about request
function parseArtistHotttnesss(body){
    var resObj = JSON.parse(body);
    if(resObj.response.status.message != "Success"){
        return "ERROR: Response from Echo Nest failed." + resObj.response.status.message;
    }
    return resObj.response.artist.hotttnesss;
}
    </code></pre>{{/if}}

    {{#if parse.images}}<pre><code>
    //Parses response from getArtistImages
//Parameters: body object returned by response
//Returns: array of image objects
function parseArtistImages(body){
    var resObj = JSON.parse(body);
    if(resObj.response.status.message != "Success"){
       return "ERROR: Images response from Echo Nest failed." + resObj.response.status.message;
       }
    console.log("resObj is: " + resObj);
    var imagesArray = [];
    var current = 0;
    var count = resObj.response.total;
    if (count > 5){
        count = 5;
    }
    var images = resObj.response.images;
    console.log("count is: " + count);
    
    //order bios by not truncated, then truncated
    for(var i = 0; i < count; i++){
        console.log("i is: " + i);
        if(images[i].url){
            //put item at end of bioArray
            imagesArray.push(images[i]);
        }
        else console.log("Image without URL!");
    }
    if(imagesArray.length != count){
        console.log("ERROR: imagesArray.length != count " + imagesArray.length + " " + count);
        for(var j = 0; j < imagesArray.length; j++){
            console.log(imagesArray[j]);
        }
    }
    else console.log("imagesArray.length & count " + imagesArray.length + " " + count);
    
    return imagesArray;
}
    </code></pre>{{/if}}

    {{#if parse.bios}}<pre><code>
//Creates a string for requesting artist bios
//Parameters: 
//  artist name
//  quantity
//  start index
//Returns: Array of objects representing bios
function parseArtistBiographies(body){
    var resObj = JSON.parse(body);
    if(resObj.response.status.message != "Success"){
       return "ERROR: Bio response from Echo Nest failed." + resObj.response.status.message;
       }
    var bioArray = [];
    var current = 0;
    var count = resObj.response.total;
    if (count > 3){
        count = 3;
    }
    var bios = resObj.response.biographies;
    //console.log("bio count is: " + count);
    console.log("bios[0] is: " + bios[0]);
    //console.log(typeof(bios[0]));
    //order bios by not truncated, then truncated
    for(var i = 0; i < count; i++){
        //console.log("i is: " + i);
        if(bios[i].truncated){
            //put item at end of bioArray
            bioArray.push(bios[i]);
        }
        else bioArray.unshift(bios[i]);
    }
    if(bioArray.length != count){
        console.log("ERROR: bioArray.length != count " + bioArray.length + " " + count);
        for(var j = 0; j < bioArray.length; j++){
            console.log(bioArray[i]);
        }
    }
    //else console.log("bioArray.length & count " + bioArray.length + " " + count);
    
    return bioArray;
}
    </code></pre>{{/if}}
{{/if}}

{{#if together}}
    <p>{{together.text}}</p>

    {{#if together.hotttnesss}}<pre><code>
var hotttString = getArtistHotttnesss(context.favArtist);
request(hotttString, function(error, response, body){
    console.log("Sent request hotttnesss...");
    if(!error && response.statusCode < 400){
        console.log("GetArtistHotttnesss responded with: " + body);
        context.hotttnesss = parseArtistHotttnesss(body);
        //render something here!
    }
});
    </code></pre>{{/if}}

    {{#if together.images}}<pre><code>
var imagesString = getArtistImages(context.favArtist, 1, 0);
request(imagesString, function(error0, response0, body0){
    if(!error0 && response0.statusCode < 400){
        context.images = parseArtistImages(body0);
        if(context.images[0]){
                context.oneImageURL = context.images[0].url;
        }
        //if there is no image, let us put one in anyway!
        //thanks, Wikipedia, for the image!
        else context.oneImageURL = "https://www.wikipedia.org/portal/wikipedia.org/assets/img/Wikipedia-logo-v2@2x.png"
        //render something here
    }
});
    </code></pre>{{/if}}

    {{#if together.bios}}<pre><code>
var biosString = getArtistBiographies(context.favArtist, 1, 0);
request(biosString, function(error1, response1, body1){
    if(!error1 && response1.statusCode < 400){
        //console.log("GetArtistBiographies responded with: " + body1);
        context.bios = parseArtistBiographies(body1);
        //render something here
    }
});
    </code></pre>{{/if}}
{{/if}}

{{#if next}}
<form method="post" action="/{{next}}">
    <button type="submit" name="next" value="next">Next</button>
</form>
{{/if}}
<form method="post" action="/{{previous}}">
    <button type="submit" name="previous" value="previous">Previous</button>
</form>
<!-- Figure out how to format this so Back is on the right
ToC in the middle and
Next on the Right 
<button id="btnBack">Back</button>
<!--<a href="toc.handlebars">Table of Contents</a>-->
<!--<button id="btnNext">Next</button>-->